{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true,
      "collapsed_sections": [
        "1EBU8jfHfs4L",
        "SrKKjISmP9Ka"
      ]
    },
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.6"
    },
    "toc": {
      "base_numbering": 1,
      "nav_menu": {},
      "number_sections": true,
      "sideBar": true,
      "skip_h1_title": false,
      "title_cell": "Table of Contents",
      "title_sidebar": "Contents",
      "toc_cell": false,
      "toc_position": {},
      "toc_section_display": true,
      "toc_window_display": false
    },
    "varInspector": {
      "cols": {
        "lenName": 16,
        "lenType": 16,
        "lenVar": 40
      },
      "kernels_config": {
        "python": {
          "delete_cmd_postfix": "",
          "delete_cmd_prefix": "del ",
          "library": "var_list.py",
          "varRefreshCmd": "print(var_dic_list())"
        },
        "r": {
          "delete_cmd_postfix": ") ",
          "delete_cmd_prefix": "rm(",
          "library": "var_list.r",
          "varRefreshCmd": "cat(var_dic_list()) "
        }
      },
      "types_to_exclude": [
        "module",
        "function",
        "builtin_function_or_method",
        "instance",
        "_Feature"
      ],
      "window_display": false
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "## –î–µ—Ä–µ–≤—å—è —Ä–µ—à–µ–Ω–∏–π"
      ],
      "metadata": {
        "id": "uXPc07_gfFxz"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xNqlt8qv_Gkg"
      },
      "source": [
        "### –ö—Ä–∏—Ç–µ—Ä–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "collapsed": true,
        "id": "IRCitUaD_Gkh"
      },
      "source": [
        "import numpy as np\n",
        "from collections import Counter"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dNlJkrW1_Gkh",
        "outputId": "676c1c1a-e842-4812-ca1e-2488f23bb181"
      },
      "source": [
        "Counter([9,9,9,7,7])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Counter({9: 3, 7: 2})"
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### –î–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏"
      ],
      "metadata": {
        "id": "p5AGdbiABCG7"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "01ltcSS1_Gkj"
      },
      "source": [
        "–†–∞—Å—á—ë—Ç —ç–Ω—Ç—Ä–æ–ø–∏–π–Ω–æ–≥–æ –∫—Ä–∏—Ç–µ—Ä–∏—è:\n",
        "\n",
        "$H(R) = -\\sum_{k=1}^{K}p_klogp_k$"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "collapsed": true,
        "id": "FWfxAixo_Gkj"
      },
      "source": [
        "def entropy(data):\n",
        "    length = len(data)\n",
        "    cnt = Counter(data)\n",
        "\n",
        "    ent = 0\n",
        "    for cl in cnt.values():\n",
        "        p = cl / length\n",
        "        l2 = np.log2(p)\n",
        "        it = -p * l2\n",
        "        ent += it\n",
        "\n",
        "    return ent"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### üß† –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫—Ä–∏—Ç–µ—Ä–∏—è –î–∂–∏–Ω–∏"
      ],
      "metadata": {
        "id": "5QRgSosjfkSu"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "q3vhjUED_Gkk"
      },
      "source": [
        "–ü–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å *—ç–Ω—Ç—Ä–æ–ø–∏–π–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏–µ–º* –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é *–∫—Ä–∏—Ç–µ—Ä–∏—è –î–∂–∏–Ω–∏*\n",
        "\n",
        "$–ù(R) = \\sum_{k=1}^{K}p_k(1-p_k)$"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def gini(data):\n",
        "    length = len(data)\n",
        "    cnt = Counter(data)\n",
        "\n",
        "    gini = 0\n",
        "    for cl in cnt.values():\n",
        "        p_1 = ...\n",
        "        p_2 = ...\n",
        "        it = ...\n",
        "        gini += ...\n",
        "\n",
        "    return gini"
      ],
      "metadata": {
        "id": "pQJYmToOfsBs"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### üß† –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ (–æ—Ç–≤–µ—Ç). –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫—Ä–∏—Ç–µ—Ä–∏—è –î–∂–∏–Ω–∏"
      ],
      "metadata": {
        "id": "1EBU8jfHfs4L"
      }
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7DZ1R7Yf_Gkk"
      },
      "source": [
        "def gini(data):\n",
        "    length = len(data)\n",
        "    cnt = Counter(data)\n",
        "\n",
        "    gini = 0\n",
        "    for cl in cnt.values():\n",
        "        p_1 = cl / length\n",
        "        p_2 = (1 - p_1)\n",
        "        it = p_1 * p_2\n",
        "        gini += it\n",
        "\n",
        "    return gini"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### –ü—Ä–∏—Ä–æ—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"
      ],
      "metadata": {
        "id": "86HdIM8LmgfL"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "J6hGrTv1_Gkk"
      },
      "source": [
        "*Information Gain (IG)* - —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–∞—á–µ—Å—Ç–≤–∞, –æ—Ç–≤–µ—á–∞—é—â–∏–π –Ω–∞ –≤–æ–ø—Ä–æ—Å, –∞ —Å–∫–æ–ª—å–∫–æ —ç–Ω—Ç—Ä–æ–ø–∏–∏ –º—ã –ø–æ–≥–∞—Å–∏–ª–∏ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º —Ä–∞–∑–±–∏–µ–Ω–∏–∏? –ù–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ —Ä–∞–∑–±–∏–µ–Ω–∏—è –ø—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –¥–µ—Ä–µ–≤–∞ –º–∞–∫—Å–∏–º–∏–∑–∏—Ä—É–µ—Ç—Å—è IG. –§–æ—Ä–º—É–ª–∞ –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–∏ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏ H:\n",
        "\n",
        "$IG(R) = H(R) - \\frac{|R_l|}{|R|}H(R_l) - \\frac{|R_r|}{|R|}H(R_r)$"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "collapsed": true,
        "id": "Z2iL9fgH_Gkl"
      },
      "source": [
        "def information_gain(crit, data, i):\n",
        "    left_data = data[:i]\n",
        "    right_data = data[i:]\n",
        "    left_crit = (len(left_data) / len(data)) * crit(left_data)\n",
        "    right_crit = (len(right_data) / len(data)) * crit(right_data)\n",
        "    return crit(data) - left_crit - right_crit"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gehVtaMp_Gkl"
      },
      "source": [
        "–¢—É—Ç —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –∫—Ä–∏—Ç–µ—Ä–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–∞ –≤—ã–±–æ—Ä–∫–µ"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "collapsed": true,
        "id": "nYCuehLN_Gkl"
      },
      "source": [
        "def get_best_split(crit, data):\n",
        "    print(\"{:4} {:4} {:4} {:4}\".format(\"#\",\"IG\",\"Hl\",\"Hr\"))\n",
        "    print(\"_\" * 20)\n",
        "    i_max, ig_max = 0, 0\n",
        "\n",
        "    for i in range(1, len(data)):\n",
        "        ig = information_gain(crit, data, i)\n",
        "        crit_left = crit(data[:i])\n",
        "        crit_right = crit(data[i:])\n",
        "\n",
        "        print(f\"{i:2}. {ig:.2f} {crit_left:.2f} {crit_right:.2f}\")\n",
        "\n",
        "        if ig_max < ig:\n",
        "            i_max, ig_max = i, ig\n",
        "\n",
        "    print(f'–î–µ–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ —ç–ª–µ–º–µ–Ω—Ç–∞:{i_max}')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7oeArW56_Gkl"
      },
      "source": [
        "–û–ø—Ä–µ–¥–µ–ª–∏–º –∫–∞–∫-–Ω–∏–±—É–¥—å –≤—ã–±–æ—Ä–∫—É –∏ –ø–æ—Å–º–æ—Ç—Ä–∏–º, –∫–∞–∫–æ–µ —Ä–∞–∑–±–∏–µ–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–∞—Ç –∫—Ä–∏—Ç–µ—Ä–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏. –ó–∞–º–µ—á—É, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã –∑–¥–µ—Å—å –±—É–¥—É—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –Ω–∞—á–∏–Ω–∞—è —Å–æ –≤—Ç–æ—Ä–æ–≥–æ, –∞ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã –¥–ª—è —Ä–∞–∑–±–∏–µ–Ω–∏—è *–ø–µ—Ä–µ–¥* —ç–ª–µ–º–µ–Ω—Ç–æ–º —Å—Ç—Ä–æ–∫–∏"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data = ['cat'] * 5 + ['dog'] * 3\n",
        "# data = ['cat'] + ['dog'] + ['cat'] * 2 + ['dog'] * 2 + ['cat'] * 2\n",
        "data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qg6Aa9yEmmpo",
        "outputId": "bc938d68-f4c6-4bb2-aa83-5367546fbdb2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['cat', 'cat', 'cat', 'cat', 'cat', 'dog', 'dog', 'dog']"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ffzaEsDs_Gkm",
        "scrolled": true,
        "outputId": "790aca9a-b903-4219-9c0e-bcd201c9dec4"
      },
      "source": [
        "get_best_split(entropy, data)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "#    IG   Hl   Hr  \n",
            "____________________\n",
            " 1. 0.09 0.00 0.99\n",
            " 2. 0.20 0.00 1.00\n",
            " 3. 0.35 0.00 0.97\n",
            " 4. 0.55 0.00 0.81\n",
            " 5. 0.95 0.00 0.00\n",
            " 6. 0.47 0.65 0.00\n",
            " 7. 0.20 0.86 0.00\n",
            "–î–µ–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ —ç–ª–µ–º–µ–Ω—Ç–∞:5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ykP1A_VJ_Gkm",
        "scrolled": true,
        "outputId": "5ac5526e-fe82-4b70-ba5e-9c8738b9897a"
      },
      "source": [
        "get_best_split(gini, data)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "#    IG   Hl   Hr  \n",
            "____________________\n",
            " 1. 0.04 0.00 0.49\n",
            " 2. 0.09 0.00 0.50\n",
            " 3. 0.17 0.00 0.48\n",
            " 4. 0.28 0.00 0.38\n",
            " 5. 0.47 0.00 0.00\n",
            " 6. 0.26 0.28 0.00\n",
            " 7. 0.11 0.41 0.00\n",
            "–î–µ–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ —ç–ª–µ–º–µ–Ω—Ç–∞:5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### –î–ª—è —Ä–µ–≥—Ä–µ—Å—Å–∏–∏"
      ],
      "metadata": {
        "id": "cb_mn4wuBIY3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "\n",
        "x1 = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8])\n",
        "x2 = np.array([-10, 10, -2, 6, 2, 3, -15, 30, 30])\n",
        "X = pd.DataFrame({'x1': x1, 'x2': x2})\n",
        "\n",
        "y = np.array([0, 1, 2, 0.1, 1.1, 2.1, 0.2, 1.2, 2.2])"
      ],
      "metadata": {
        "id": "b5NgNrzHBvQA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### üß† –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 2. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫—Ä–∏—Ç–µ—Ä–∏—è squared_error"
      ],
      "metadata": {
        "id": "KS2Kw_98BI0a"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kJxn9ybpBI0b"
      },
      "source": [
        "–ü–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å –∫—Ä–∏—Ç–µ—Ä–∏—è–º–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–¥—Å—á–µ—Ç —Å—Ä–µ–¥–Ω–µ-–∫–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–æ–π –æ—à–∏–±–∫–∏\n",
        "\n",
        "$–ù(R) = \\frac{1}{n}\\sum_{k=1}^{n} (y - \\bar{y})^ 2$"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def squared_error(y):\n",
        "    y_mean = ...\n",
        "    err = ...\n",
        "    return err"
      ],
      "metadata": {
        "id": "NrEW5xFaBI0c"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "squared_error(y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lmdsMkLkF7pQ",
        "outputId": "2e081261-023c-4d20-b0b8-8686cce8e0e7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.6733333333333333"
            ]
          },
          "metadata": {},
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### üß† –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ (–æ—Ç–≤–µ—Ç). –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫—Ä–∏—Ç–µ—Ä–∏—è squared_error"
      ],
      "metadata": {
        "id": "W4jXHjqmBI0d"
      }
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ou5TdiAfBI0f"
      },
      "source": [
        "def squared_error(y):\n",
        "    y_mean = y.mean()\n",
        "    err = np.sum((y - y_mean) ** 2) / y.shape[0]\n",
        "    return err"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### üß† –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 3. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ª—É—á—à–µ–≥–æ —Ä–∞–∑–±–∏–µ–Ω–∏—è"
      ],
      "metadata": {
        "id": "UDgoySJXF9ix"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "1. –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—Ä–∏–∑–Ω–∞–∫–∏:\n",
        "   * —Å–æ—Ä—Ç–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–∏–∑–Ω–∞–∫ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é\n",
        "   * –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –ø–æ—Ä–æ–≥–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –≤—ã–±–æ—Ä–∫–∏ –Ω–∞ –¥–≤–µ —á–∞—Å—Ç–∏, —Å—á–∏—Ç–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –∫—Ä–∏—Ç–µ—Ä–∏–π\n",
        "2. –í—ã–±–∏—Ä–∞–µ–º –ª—É—á—à–µ–µ —Ä–∞–∑–±–∏–µ–Ω–∏–µ —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏—Ä–æ—Å—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n"
      ],
      "metadata": {
        "id": "hAoO96LaGBeo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "ig_max = 0\n",
        "best_feature = 0\n",
        "best_val = 0\n",
        "\n",
        "for feature in ...:\n",
        "    for val in ...:\n",
        "        left_inds = ...\n",
        "        right_inds = ...\n",
        "        if len(left_inds) == 0 or len(right_inds) == 0:\n",
        "            continue\n",
        "\n",
        "        left_data, right_data = ...\n",
        "        left_y, right_y = ...\n",
        "\n",
        "        left_crit = ...\n",
        "        right_crit = ...\n",
        "\n",
        "\n",
        "        ig = squared_error(y) - left_crit - right_crit\n",
        "\n",
        "        if ig_max <= ig:\n",
        "            ig_max = ig\n",
        "            best_feature = feature\n",
        "            best_val = val"
      ],
      "metadata": {
        "id": "ChQFr5ywJjDL"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "ig_max, best_feature, best_val"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kLajpETZKAFj",
        "outputId": "08de7a6f-c7ce-4e87-cfad-ef62bd5cf964"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(0.28571428571428564, 'x2', -10)"
            ]
          },
          "metadata": {},
          "execution_count": 135
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### üß† –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 3 (–æ—Ç–≤–µ—Ç). –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ª—É—á—à–µ–≥–æ —Ä–∞–∑–±–∏–µ–Ω–∏—è"
      ],
      "metadata": {
        "id": "PmnnMtK1GCwS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "ig_max = 0\n",
        "best_feature = 0\n",
        "best_val = 0\n",
        "\n",
        "for feature in X.columns:\n",
        "    for val in X[feature].unique():\n",
        "        left_inds = X[X[feature] <= val].index\n",
        "        right_inds = X[X[feature] > val].index\n",
        "        if len(left_inds) == 0 or len(right_inds) == 0:\n",
        "            continue\n",
        "\n",
        "        left_data, right_data = X.loc[left_inds], X.loc[right_inds]\n",
        "        left_y, right_y = y[left_inds], y[right_inds]\n",
        "\n",
        "        left_crit = (len(left_inds) / X.shape[0]) * squared_error(left_y)\n",
        "        right_crit = (len(right_inds) / X.shape[0]) * squared_error(right_y)\n",
        "\n",
        "\n",
        "        ig = squared_error(y) - left_crit - right_crit\n",
        "\n",
        "        if ig_max <= ig:\n",
        "            ig_max = ig\n",
        "            best_feature = feature\n",
        "            best_val = val"
      ],
      "metadata": {
        "id": "DvnQpCbUGE9E"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "ig_max, best_feature, best_val"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Hgw1LYkEGETM",
        "outputId": "5d4694fa-d29f-452c-9b0b-36aae972d234"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(0.28571428571428564, 'x2', -10)"
            ]
          },
          "metadata": {},
          "execution_count": 119
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "–ú–æ–∂–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ–±—è —Å –ø–æ–º–æ—â—å—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–∑ sklearn"
      ],
      "metadata": {
        "id": "u84Mqx_aFZXo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.tree import DecisionTreeRegressor, plot_tree\n",
        "\n",
        "dt = DecisionTreeRegressor(max_depth=1).fit(X, y)\n",
        "dt.score(X, y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X1dhDu3gFb6J",
        "outputId": "47d3e5d0-ea41-4a01-ec20-1d99f107c56a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.4243281471004243"
            ]
          },
          "metadata": {},
          "execution_count": 123
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plot_tree(dt, feature_names=X.columns);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 426
        },
        "id": "0FmzjrgUC20I",
        "outputId": "bca7faa4-6e3a-429e-fb37-6f7e62efed32"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tmp_df = X.copy()\n",
        "tmp_df['y'] = y"
      ],
      "metadata": {
        "id": "ixOyOUyLI5NJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "left_data = tmp_df[tmp_df[best_feature] <= best_val]\n",
        "right_data = tmp_df[tmp_df[best_feature] > best_val]\n",
        "display(left_data, right_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 384
        },
        "id": "MIofqYwOInYH",
        "outputId": "1b873f58-bc0e-466e-f13d-3e40a6a674cb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "   x1  x2    y\n",
              "0   0 -10  0.0\n",
              "6   6 -15  0.2"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dcd621d7-70a2-4055-8e78-49270aa1d9a2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>x1</th>\n",
              "      <th>x2</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>-10</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>6</td>\n",
              "      <td>-15</td>\n",
              "      <td>0.2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dcd621d7-70a2-4055-8e78-49270aa1d9a2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-dcd621d7-70a2-4055-8e78-49270aa1d9a2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-dcd621d7-70a2-4055-8e78-49270aa1d9a2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-62f36679-31e3-48f0-b8c6-7af98c8e6719\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-62f36679-31e3-48f0-b8c6-7af98c8e6719')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-62f36679-31e3-48f0-b8c6-7af98c8e6719 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "left_data",
              "summary": "{\n  \"name\": \"left_data\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"x1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          6,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"x2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": -15,\n        \"max\": -10,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -15,\n          -10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.14142135623730953,\n        \"min\": 0.0,\n        \"max\": 0.2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.2,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "   x1  x2    y\n",
              "1   1  10  1.0\n",
              "2   2  -2  2.0\n",
              "3   3   6  0.1\n",
              "4   4   2  1.1\n",
              "5   5   3  2.1\n",
              "7   7  30  1.2\n",
              "8   8  30  2.2"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-69ebc294-5414-432c-8379-55e7d178437e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>x1</th>\n",
              "      <th>x2</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>10</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>-2</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>0.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>2.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>7</td>\n",
              "      <td>30</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>8</td>\n",
              "      <td>30</td>\n",
              "      <td>2.2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-69ebc294-5414-432c-8379-55e7d178437e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-69ebc294-5414-432c-8379-55e7d178437e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-69ebc294-5414-432c-8379-55e7d178437e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-222d95dc-33c9-47ee-ab36-6da1e412af17\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-222d95dc-33c9-47ee-ab36-6da1e412af17')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-222d95dc-33c9-47ee-ab36-6da1e412af17 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "right_data",
              "summary": "{\n  \"name\": \"right_data\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"x1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 8,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          2,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"x2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": -2,\n        \"max\": 30,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          10,\n          -2,\n          30\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7603257447273755,\n        \"min\": 0.1,\n        \"max\": 2.2,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1.0,\n          2.0,\n          1.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sorted(tmp_df['x2'].unique())\n",
        "\n",
        "(-10 + -2) / 2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b3NJvHm0Jbaw",
        "outputId": "961608a4-30cc-40a8-b8f7-0fcc0e65e5ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "-6.0"
            ]
          },
          "metadata": {},
          "execution_count": 129
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Å—Ç–∞–Ω–æ–≤–∞"
      ],
      "metadata": {
        "id": "LsknOdOo5ozJ"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WbYItv3B448G"
      },
      "source": [
        "–ü–æ—Ä–∞–±–æ—Ç–∞–µ–º —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –∏ –æ—Ü–µ–Ω–∫–∞—Ö –≤–∏–¥–µ–æ–∏–≥—Ä —Å [Kaggle Datasets](https://www.kaggle.com/rush4ratio/video-game-sales-with-ratings)."
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!wget https://drive.google.com/uc?id=1GjWxnBDtloQ_qXE8eawLYhWEpve5aeXL -O videogames.csv"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fd_H8Hu0NxYF",
        "outputId": "629eb973-b337-4546-d3e0-fa25664c39ac"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2024-08-22 12:58:51--  https://drive.google.com/uc?id=1GjWxnBDtloQ_qXE8eawLYhWEpve5aeXL\n",
            "Resolving drive.google.com (drive.google.com)... 74.125.134.138, 74.125.134.102, 74.125.134.113, ...\n",
            "Connecting to drive.google.com (drive.google.com)|74.125.134.138|:443... connected.\n",
            "HTTP request sent, awaiting response... 303 See Other\n",
            "Location: https://drive.usercontent.google.com/download?id=1GjWxnBDtloQ_qXE8eawLYhWEpve5aeXL [following]\n",
            "--2024-08-22 12:58:51--  https://drive.usercontent.google.com/download?id=1GjWxnBDtloQ_qXE8eawLYhWEpve5aeXL\n",
            "Resolving drive.usercontent.google.com (drive.usercontent.google.com)... 173.194.212.132, 2607:f8b0:400c:c11::84\n",
            "Connecting to drive.usercontent.google.com (drive.usercontent.google.com)|173.194.212.132|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 1618040 (1.5M) [application/octet-stream]\n",
            "Saving to: ‚Äòvideogames.csv‚Äô\n",
            "\n",
            "videogames.csv      100%[===================>]   1.54M  --.-KB/s    in 0.009s  \n",
            "\n",
            "2024-08-22 12:58:53 (167 MB/s) - ‚Äòvideogames.csv‚Äô saved [1618040/1618040]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "scrolled": false,
        "id": "B3tMTzIR448H",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f0375d37-8cca-498a-b03c-9efef678b727"
      },
      "source": [
        "import pandas as pd\n",
        "\n",
        "df = pd.read_csv('videogames.csv')\n",
        "print(df.shape)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(16719, 16)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### –ü–µ—Ä–µ–≤–æ–¥ –≤ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é"
      ],
      "metadata": {
        "id": "55zQNPxs7cs5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# –ø—Ä–æ–ø—É—Å–∫–∏\n",
        "df = df.dropna(subset='User_Score')\n",
        "# —Å—Ç—Ä–æ–∫–∏\n",
        "df = df[~(df['User_Score'] == 'tbd')]\n",
        "df['User_Score'] = df['User_Score'].astype('float')\n",
        "\n",
        "df['User_Score_cls'] = pd.cut(df['User_Score'], bins=[0, 6, 8, 10], labels=['low', 'med', 'high'])\n",
        "\n",
        "df = df.drop(columns=['Name', 'Publisher', 'Developer'])\n",
        "\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "ZnIFqmp-6ccX",
        "outputId": "25187f73-746a-4899-cb8b-945bb243d7a7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Platform  Year_of_Release     Genre  NA_Sales  EU_Sales  JP_Sales  \\\n",
              "0      Wii           2006.0    Sports     41.36     28.96      3.77   \n",
              "2      Wii           2008.0    Racing     15.68     12.76      3.79   \n",
              "3      Wii           2009.0    Sports     15.61     10.93      3.28   \n",
              "6       DS           2006.0  Platform     11.28      9.14      6.50   \n",
              "7      Wii           2006.0      Misc     13.96      9.18      2.93   \n",
              "\n",
              "   Other_Sales  Global_Sales  Critic_Score  Critic_Count  User_Score  \\\n",
              "0         8.45         82.53          76.0          51.0         8.0   \n",
              "2         3.29         35.52          82.0          73.0         8.3   \n",
              "3         2.95         32.77          80.0          73.0         8.0   \n",
              "6         2.88         29.80          89.0          65.0         8.5   \n",
              "7         2.84         28.92          58.0          41.0         6.6   \n",
              "\n",
              "   User_Count Rating User_Score_cls  \n",
              "0       322.0      E            med  \n",
              "2       709.0      E           high  \n",
              "3       192.0      E            med  \n",
              "6       431.0      E           high  \n",
              "7       129.0      E            med  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a9192b4a-4cdd-4151-bee1-34cb9c403779\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Platform</th>\n",
              "      <th>Year_of_Release</th>\n",
              "      <th>Genre</th>\n",
              "      <th>NA_Sales</th>\n",
              "      <th>EU_Sales</th>\n",
              "      <th>JP_Sales</th>\n",
              "      <th>Other_Sales</th>\n",
              "      <th>Global_Sales</th>\n",
              "      <th>Critic_Score</th>\n",
              "      <th>Critic_Count</th>\n",
              "      <th>User_Score</th>\n",
              "      <th>User_Count</th>\n",
              "      <th>Rating</th>\n",
              "      <th>User_Score_cls</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Wii</td>\n",
              "      <td>2006.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>41.36</td>\n",
              "      <td>28.96</td>\n",
              "      <td>3.77</td>\n",
              "      <td>8.45</td>\n",
              "      <td>82.53</td>\n",
              "      <td>76.0</td>\n",
              "      <td>51.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>322.0</td>\n",
              "      <td>E</td>\n",
              "      <td>med</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Wii</td>\n",
              "      <td>2008.0</td>\n",
              "      <td>Racing</td>\n",
              "      <td>15.68</td>\n",
              "      <td>12.76</td>\n",
              "      <td>3.79</td>\n",
              "      <td>3.29</td>\n",
              "      <td>35.52</td>\n",
              "      <td>82.0</td>\n",
              "      <td>73.0</td>\n",
              "      <td>8.3</td>\n",
              "      <td>709.0</td>\n",
              "      <td>E</td>\n",
              "      <td>high</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Wii</td>\n",
              "      <td>2009.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>15.61</td>\n",
              "      <td>10.93</td>\n",
              "      <td>3.28</td>\n",
              "      <td>2.95</td>\n",
              "      <td>32.77</td>\n",
              "      <td>80.0</td>\n",
              "      <td>73.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>192.0</td>\n",
              "      <td>E</td>\n",
              "      <td>med</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>DS</td>\n",
              "      <td>2006.0</td>\n",
              "      <td>Platform</td>\n",
              "      <td>11.28</td>\n",
              "      <td>9.14</td>\n",
              "      <td>6.50</td>\n",
              "      <td>2.88</td>\n",
              "      <td>29.80</td>\n",
              "      <td>89.0</td>\n",
              "      <td>65.0</td>\n",
              "      <td>8.5</td>\n",
              "      <td>431.0</td>\n",
              "      <td>E</td>\n",
              "      <td>high</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Wii</td>\n",
              "      <td>2006.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>13.96</td>\n",
              "      <td>9.18</td>\n",
              "      <td>2.93</td>\n",
              "      <td>2.84</td>\n",
              "      <td>28.92</td>\n",
              "      <td>58.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>6.6</td>\n",
              "      <td>129.0</td>\n",
              "      <td>E</td>\n",
              "      <td>med</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9192b4a-4cdd-4151-bee1-34cb9c403779')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a9192b4a-4cdd-4151-bee1-34cb9c403779 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a9192b4a-4cdd-4151-bee1-34cb9c403779');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a5ae21bb-27ae-4722-a9f2-65fc8b64565b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a5ae21bb-27ae-4722-a9f2-65fc8b64565b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a5ae21bb-27ae-4722-a9f2-65fc8b64565b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 7590,\n  \"fields\": [\n    {\n      \"column\": \"Platform\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"Wii\",\n          \"DS\",\n          \"3DS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year_of_Release\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.296115011647381,\n        \"min\": 1985.0,\n        \"max\": 2016.0,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          2002.0,\n          2016.0,\n          2006.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"Adventure\",\n          \"Role-Playing\",\n          \"Sports\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NA_Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9259282594356265,\n        \"min\": 0.0,\n        \"max\": 41.36,\n        \"num_unique_values\": 353,\n        \"samples\": [\n          1.83,\n          3.88,\n          1.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EU_Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6581689226053827,\n        \"min\": 0.0,\n        \"max\": 28.96,\n        \"num_unique_values\": 275,\n        \"samples\": [\n          3.07,\n          1.29,\n          0.56\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"JP_Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2739720772199982,\n        \"min\": 0.0,\n        \"max\": 6.5,\n        \"num_unique_values\": 158,\n        \"samples\": [\n          1.34,\n          2.49,\n          1.35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Other_Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2585324964289503,\n        \"min\": 0.0,\n        \"max\": 10.57,\n        \"num_unique_values\": 145,\n        \"samples\": [\n          0.55,\n          0.03,\n          1.97\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Global_Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.8756593662758816,\n        \"min\": 0.01,\n        \"max\": 82.53,\n        \"num_unique_values\": 545,\n        \"samples\": [\n          2.3,\n          6.74,\n          1.85\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Critic_Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.880645852659816,\n        \"min\": 13.0,\n        \"max\": 98.0,\n        \"num_unique_values\": 82,\n        \"samples\": [\n          67.0,\n          76.0,\n          74.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Critic_Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.16711936650701,\n        \"min\": 3.0,\n        \"max\": 113.0,\n        \"num_unique_values\": 106,\n        \"samples\": [\n          6.0,\n          58.0,\n          80.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"User_Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5000060936257982,\n        \"min\": 0.0,\n        \"max\": 9.7,\n        \"num_unique_values\": 95,\n        \"samples\": [\n          2.2,\n          7.5,\n          3.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"User_Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 561.2823262473771,\n        \"min\": 4.0,\n        \"max\": 10665.0,\n        \"num_unique_values\": 888,\n        \"samples\": [\n          892.0,\n          932.0,\n          16.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"M\",\n          \"AO\",\n          \"E\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"User_Score_cls\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"med\",\n          \"high\",\n          \"low\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 180
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞"
      ],
      "metadata": {
        "id": "GSpYqMRA7LN2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "\n",
        "df = df.dropna()\n",
        "\n",
        "target = 'User_Score_cls'\n",
        "\n",
        "X = df.drop(columns=[target, 'User_Score'])\n",
        "y = df[target]\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)"
      ],
      "metadata": {
        "id": "cerL6smR2-1v"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.compose import ColumnTransformer\n",
        "from sklearn.preprocessing import OneHotEncoder, StandardScaler\n",
        "\n",
        "\n",
        "cat_cols = X_train.select_dtypes('object').columns\n",
        "num_cols = X_train.select_dtypes(exclude='object').columns\n",
        "\n",
        "ohe = OneHotEncoder(sparse=False).fit(X_train[cat_cols])\n",
        "X_train_pipe = X_train.copy()\n",
        "X_test_pipe = X_test.copy()\n",
        "\n",
        "X_train_pipe[ohe.get_feature_names_out()] = ohe.transform(X_train[cat_cols])\n",
        "X_test_pipe[ohe.get_feature_names_out()] = ohe.transform(X_test[cat_cols])\n",
        "\n",
        "X_train_pipe.drop(columns=cat_cols, inplace=True)\n",
        "X_test_pipe.drop(columns=cat_cols, inplace=True)\n",
        "\n",
        "\n",
        "\n",
        "# ss = StandardScaler()\n",
        "\n",
        "\n",
        "X_train_pipe.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AUjNdjdU3GRo",
        "outputId": "6c63d9a7-9acc-4131-db87-c177800122db"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/preprocessing/_encoders.py:975: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(5460, 45)"
            ]
          },
          "metadata": {},
          "execution_count": 211
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.tree import DecisionTreeClassifier\n",
        "\n",
        "dt = DecisionTreeClassifier(random_state=1)\n",
        "dt.fit(X_train_pipe, y_train)\n",
        "\n",
        "\n",
        "dt.score(X_train_pipe, y_train), dt.score(X_test_pipe, y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6ByX8HduK1dU",
        "outputId": "6cd6dd72-a23b-4935-9514-7c4f8fb2b333"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1.0, 0.5351390922401171)"
            ]
          },
          "metadata": {},
          "execution_count": 212
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### üß† –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ø–æ–¥–±–æ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–æ–¥–µ–ª–∏ Decision Tree —á–µ—Ä–µ–∑ –∫—Ä–æ—Å—Å-–≤–∞–ª–∏–¥–∞—Ü–∏—é"
      ],
      "metadata": {
        "id": "kN10vbzS7tee"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "–ü–µ—Ä–µ–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n",
        "\n",
        "1. max_depth –æ—Ç 1 –¥–æ 10\n",
        "2. min_samples_leaf –æ—Ç 1 –¥–æ 50\n",
        "\n",
        "–°—á–∏—Ç–∞–π—Ç–µ –º–µ—Ç—Ä–∏–∫—É ROC AUC —Å OvO –ø–æ –∫—Ä–æ—Å—Å-–≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–∞ 5 —Ñ–æ–ª–¥–∞—Ö.\n",
        "\n",
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å–∞–º—É—é –ª—É—á—à—É—é –º–æ–¥–µ–ª—å."
      ],
      "metadata": {
        "id": "Vvp06iEn7mRo"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "x9FZCDch6J10"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### üß† –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ø–æ–¥–±–æ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–æ–¥–µ–ª–∏ Decision Tree —á–µ—Ä–µ–∑ –∫—Ä–æ—Å—Å-–≤–∞–ª–∏–¥–∞—Ü–∏—é (–æ—Ç–≤–µ—Ç)\n"
      ],
      "metadata": {
        "id": "SrKKjISmP9Ka"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import GridSearchCV\n",
        "from tqdm import tqdm\n",
        "\n",
        "\n",
        "params = {'max_depth': np.arange(1, 10),\n",
        "          'min_samples_leaf': np.arange(1, 50, 5)}\n",
        "\n",
        "dt = DecisionTreeClassifier(random_state=1)\n",
        "\n",
        "gs = GridSearchCV(\n",
        "    dt, params,\n",
        "    cv=5, scoring='roc_auc_ovo'\n",
        ")\n",
        "\n",
        "gs.fit(X_train_pipe, y_train)\n",
        "\n",
        "gs.best_params_"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mfogRJUQ3QYu",
        "outputId": "20f47553-98a9-4aff-bb6a-9f1690527c15"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'max_depth': 9, 'min_samples_leaf': 46}"
            ]
          },
          "metadata": {},
          "execution_count": 213
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "stata = pd.DataFrame(gs.cv_results_)\n",
        "stata.sort_values('mean_test_score', ascending=False).head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 400
        },
        "id": "JJ34R_kSOvTs",
        "outputId": "5f3dd917-6160-4a06-f2f5-8c5907b92f0a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    mean_fit_time  std_fit_time  mean_score_time  std_score_time  \\\n",
              "89       0.045580      0.001510         0.014535        0.000904   \n",
              "79       0.028913      0.000358         0.009999        0.000834   \n",
              "88       0.093479      0.013570         0.026353        0.009780   \n",
              "78       0.032041      0.003549         0.010135        0.000350   \n",
              "87       0.046614      0.001060         0.014083        0.000610   \n",
              "\n",
              "   param_max_depth param_min_samples_leaf  \\\n",
              "89               9                     46   \n",
              "79               8                     46   \n",
              "88               9                     41   \n",
              "78               8                     41   \n",
              "87               9                     36   \n",
              "\n",
              "                                      params  split0_test_score  \\\n",
              "89  {'max_depth': 9, 'min_samples_leaf': 46}           0.782372   \n",
              "79  {'max_depth': 8, 'min_samples_leaf': 46}           0.784518   \n",
              "88  {'max_depth': 9, 'min_samples_leaf': 41}           0.785280   \n",
              "78  {'max_depth': 8, 'min_samples_leaf': 41}           0.787671   \n",
              "87  {'max_depth': 9, 'min_samples_leaf': 36}           0.782448   \n",
              "\n",
              "    split1_test_score  split2_test_score  split3_test_score  \\\n",
              "89           0.758024           0.790254           0.777281   \n",
              "79           0.757939           0.791111           0.774473   \n",
              "88           0.753949           0.790564           0.775100   \n",
              "78           0.753367           0.791381           0.773073   \n",
              "87           0.754841           0.789930           0.776946   \n",
              "\n",
              "    split4_test_score  mean_test_score  std_test_score  rank_test_score  \n",
              "89           0.773559         0.776298        0.010715                1  \n",
              "79           0.769156         0.775439        0.011616                2  \n",
              "88           0.771003         0.775179        0.012704                3  \n",
              "78           0.770315         0.775161        0.013582                4  \n",
              "87           0.770435         0.774920        0.011911                5  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6952bcb3-0963-4e38-8000-059306aaff9c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>mean_fit_time</th>\n",
              "      <th>std_fit_time</th>\n",
              "      <th>mean_score_time</th>\n",
              "      <th>std_score_time</th>\n",
              "      <th>param_max_depth</th>\n",
              "      <th>param_min_samples_leaf</th>\n",
              "      <th>params</th>\n",
              "      <th>split0_test_score</th>\n",
              "      <th>split1_test_score</th>\n",
              "      <th>split2_test_score</th>\n",
              "      <th>split3_test_score</th>\n",
              "      <th>split4_test_score</th>\n",
              "      <th>mean_test_score</th>\n",
              "      <th>std_test_score</th>\n",
              "      <th>rank_test_score</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>89</th>\n",
              "      <td>0.045580</td>\n",
              "      <td>0.001510</td>\n",
              "      <td>0.014535</td>\n",
              "      <td>0.000904</td>\n",
              "      <td>9</td>\n",
              "      <td>46</td>\n",
              "      <td>{'max_depth': 9, 'min_samples_leaf': 46}</td>\n",
              "      <td>0.782372</td>\n",
              "      <td>0.758024</td>\n",
              "      <td>0.790254</td>\n",
              "      <td>0.777281</td>\n",
              "      <td>0.773559</td>\n",
              "      <td>0.776298</td>\n",
              "      <td>0.010715</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>79</th>\n",
              "      <td>0.028913</td>\n",
              "      <td>0.000358</td>\n",
              "      <td>0.009999</td>\n",
              "      <td>0.000834</td>\n",
              "      <td>8</td>\n",
              "      <td>46</td>\n",
              "      <td>{'max_depth': 8, 'min_samples_leaf': 46}</td>\n",
              "      <td>0.784518</td>\n",
              "      <td>0.757939</td>\n",
              "      <td>0.791111</td>\n",
              "      <td>0.774473</td>\n",
              "      <td>0.769156</td>\n",
              "      <td>0.775439</td>\n",
              "      <td>0.011616</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88</th>\n",
              "      <td>0.093479</td>\n",
              "      <td>0.013570</td>\n",
              "      <td>0.026353</td>\n",
              "      <td>0.009780</td>\n",
              "      <td>9</td>\n",
              "      <td>41</td>\n",
              "      <td>{'max_depth': 9, 'min_samples_leaf': 41}</td>\n",
              "      <td>0.785280</td>\n",
              "      <td>0.753949</td>\n",
              "      <td>0.790564</td>\n",
              "      <td>0.775100</td>\n",
              "      <td>0.771003</td>\n",
              "      <td>0.775179</td>\n",
              "      <td>0.012704</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>0.032041</td>\n",
              "      <td>0.003549</td>\n",
              "      <td>0.010135</td>\n",
              "      <td>0.000350</td>\n",
              "      <td>8</td>\n",
              "      <td>41</td>\n",
              "      <td>{'max_depth': 8, 'min_samples_leaf': 41}</td>\n",
              "      <td>0.787671</td>\n",
              "      <td>0.753367</td>\n",
              "      <td>0.791381</td>\n",
              "      <td>0.773073</td>\n",
              "      <td>0.770315</td>\n",
              "      <td>0.775161</td>\n",
              "      <td>0.013582</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>0.046614</td>\n",
              "      <td>0.001060</td>\n",
              "      <td>0.014083</td>\n",
              "      <td>0.000610</td>\n",
              "      <td>9</td>\n",
              "      <td>36</td>\n",
              "      <td>{'max_depth': 9, 'min_samples_leaf': 36}</td>\n",
              "      <td>0.782448</td>\n",
              "      <td>0.754841</td>\n",
              "      <td>0.789930</td>\n",
              "      <td>0.776946</td>\n",
              "      <td>0.770435</td>\n",
              "      <td>0.774920</td>\n",
              "      <td>0.011911</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6952bcb3-0963-4e38-8000-059306aaff9c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6952bcb3-0963-4e38-8000-059306aaff9c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6952bcb3-0963-4e38-8000-059306aaff9c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b971563f-24a2-43e8-80b1-a7040686f1e8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b971563f-24a2-43e8-80b1-a7040686f1e8')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b971563f-24a2-43e8-80b1-a7040686f1e8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "repr_error": "0"
            }
          },
          "metadata": {},
          "execution_count": 214
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### –û—Ü–µ–Ω–∫–∞ –≤–ª–∏—è–Ω–∏—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤"
      ],
      "metadata": {
        "id": "RkD2T5FVN2d5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "best_model = gs.best_estimator_\n",
        "best_model.score(X_train_pipe, y_train), best_model.score(X_test_pipe, y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-SacXWukN53Y",
        "outputId": "e4d96602-13d5-47f1-97bc-d8e13f055b5c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(0.6545787545787546, 0.6281112737920937)"
            ]
          },
          "metadata": {},
          "execution_count": 215
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "best_model.feature_importances_"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z_pgvuyaPHW6",
        "outputId": "f4670186-e93e-4bc1-f0ee-7eb8f1334b27"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.20710425, 0.00615506, 0.0180029 , 0.01913444, 0.00674098,\n",
              "       0.01274294, 0.53733114, 0.03218803, 0.09306217, 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.02427267, 0.01024817, 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.01436311, 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "       0.        , 0.00713162, 0.        , 0.        , 0.00494727,\n",
              "       0.        , 0.        , 0.        , 0.        , 0.00657523])"
            ]
          },
          "metadata": {},
          "execution_count": 216
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "imps = pd.Series(best_model.feature_importances_, index=X_train_pipe.columns)\n",
        "imps.sort_values(ascending=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "xJhS_8xIPJT_",
        "outputId": "75abd7b0-1e8c-4b2c-c29e-7a29b842d3ea"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Critic_Score          0.537331\n",
              "Year_of_Release       0.207104\n",
              "User_Count            0.093062\n",
              "Critic_Count          0.032188\n",
              "Platform_PS2          0.024273\n",
              "JP_Sales              0.019134\n",
              "EU_Sales              0.018003\n",
              "Platform_X360         0.014363\n",
              "Global_Sales          0.012743\n",
              "Platform_PS3          0.010248\n",
              "Genre_Sports          0.007132\n",
              "Other_Sales           0.006741\n",
              "Rating_T              0.006575\n",
              "NA_Sales              0.006155\n",
              "Rating_E              0.004947\n",
              "Platform_GC           0.000000\n",
              "Genre_Platform        0.000000\n",
              "Rating_RP             0.000000\n",
              "Rating_M              0.000000\n",
              "Rating_K-A            0.000000\n",
              "Rating_E10+           0.000000\n",
              "Rating_AO             0.000000\n",
              "Genre_Strategy        0.000000\n",
              "Platform_3DS          0.000000\n",
              "Genre_Simulation      0.000000\n",
              "Genre_Shooter         0.000000\n",
              "Genre_Role-Playing    0.000000\n",
              "Genre_Racing          0.000000\n",
              "Genre_Puzzle          0.000000\n",
              "Genre_Misc            0.000000\n",
              "Platform_PC           0.000000\n",
              "Genre_Fighting        0.000000\n",
              "Genre_Adventure       0.000000\n",
              "Genre_Action          0.000000\n",
              "Platform_XOne         0.000000\n",
              "Platform_XB           0.000000\n",
              "Platform_DC           0.000000\n",
              "Platform_Wii          0.000000\n",
              "Platform_PSV          0.000000\n",
              "Platform_PSP          0.000000\n",
              "Platform_PS4          0.000000\n",
              "Platform_DS           0.000000\n",
              "Platform_GBA          0.000000\n",
              "Platform_PS           0.000000\n",
              "Platform_WiiU         0.000000\n",
              "dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Critic_Score</th>\n",
              "      <td>0.537331</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Year_of_Release</th>\n",
              "      <td>0.207104</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>User_Count</th>\n",
              "      <td>0.093062</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Critic_Count</th>\n",
              "      <td>0.032188</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_PS2</th>\n",
              "      <td>0.024273</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>JP_Sales</th>\n",
              "      <td>0.019134</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EU_Sales</th>\n",
              "      <td>0.018003</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_X360</th>\n",
              "      <td>0.014363</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Global_Sales</th>\n",
              "      <td>0.012743</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_PS3</th>\n",
              "      <td>0.010248</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genre_Sports</th>\n",
              "      <td>0.007132</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Other_Sales</th>\n",
              "      <td>0.006741</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Rating_T</th>\n",
              "      <td>0.006575</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NA_Sales</th>\n",
              "      <td>0.006155</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Rating_E</th>\n",
              "      <td>0.004947</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_GC</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genre_Platform</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Rating_RP</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Rating_M</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Rating_K-A</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Rating_E10+</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Rating_AO</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genre_Strategy</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_3DS</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genre_Simulation</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genre_Shooter</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genre_Role-Playing</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genre_Racing</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genre_Puzzle</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genre_Misc</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_PC</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genre_Fighting</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genre_Adventure</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genre_Action</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_XOne</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_XB</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_DC</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_Wii</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_PSV</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_PSP</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_PS4</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_DS</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_GBA</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_PS</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform_WiiU</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 218
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cols2drop = imps[imps == 0].index\n",
        "\n",
        "X_train_pipe.drop(columns=cols2drop, inplace=True)\n",
        "X_test_pipe.drop(columns=cols2drop, inplace=True)\n",
        "\n",
        "X_train_pipe.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sYvF9wuNP2bh",
        "outputId": "fc289894-cb60-4053-8fa2-23383d724ea7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(5460, 15)"
            ]
          },
          "metadata": {},
          "execution_count": 223
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "best_model = DecisionTreeClassifier(random_state=1, **gs.best_params_).fit(X_train_pipe, y_train)\n",
        "best_model.score(X_train_pipe, y_train), best_model.score(X_test_pipe, y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x7Bk3GyFQGpM",
        "outputId": "8fabc2a8-d872-44fe-c806-d845a2ee5414"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(0.6545787545787546, 0.6281112737920937)"
            ]
          },
          "metadata": {},
          "execution_count": 225
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## –î–µ—Ä–µ–≤–æ —Ä–µ—à–µ–Ω–∏–π –¥–ª—è —Ä–µ–≥—Ä–µ—Å—Å–∏–∏"
      ],
      "metadata": {
        "id": "B8QKBSiRlTiW"
      }
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "baI0Iqz88cYP"
      },
      "source": [
        "import numpy as np\n",
        "from sklearn.tree import DecisionTreeRegressor\n",
        "import matplotlib.pyplot as plt"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "np.random.seed(1)\n",
        "\n",
        "X = np.sort(10 * np.random.rand(50, 1), axis=0)\n",
        "y = np.sin(X[:, 0])\n",
        "\n",
        "y[::5] += 3 * (0.5 - np.random.rand(10))"
      ],
      "metadata": {
        "id": "GevPA0chLjc2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(X, y);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "HMTboUUtsMbq",
        "outputId": "7d5907b7-29c4-4811-b6d4-4ed6199a1c2e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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+5puvfVW1dTU2F1a0gteE624XhJehjBq1CjNmDFDe/bsCR0LBALas2ePSktLbawsORmGodWrV2v79u3au3evCgsL7S4paV155ZV67bXX1NjYGHrMnDlTS5YsUWNjo9LT0+0uMWnMnTu335T/P/3pT7rgggtsqih5ffzxx0pLC7+0paenKxAI2FRR6igsLJTH4wm7Xvr9fh04cCDu10u6jaJQUVGh5cuXa+bMmSopKdGGDRvU1dWlm266ye7Sks6qVau0bds2Pf3008rKygr1k7rdbo0ePdrm6pJLVlZWv7FEZ511lsaOHcsYozi79dZbNWfOHN177736x3/8R9XX12vLli3asmWL3aUlnfLyct1zzz0aP368Jk+erFdffVU/+tGP9PWvf93u0pLCyZMn9fbbb4eet7S0qLGxUTk5ORo/frzWrl2r73//+7roootUWFioO++8U/n5+Vq8eHF8C4nr3KUk9tBDDxnjx483Ro0aZZSUlBj79++3u6SkJGnAx7//+7/bXVpKYKq0eXbu3GkUFxcbGRkZxqRJk4wtW7bYXVJS8vv9xpo1a4zx48cbmZmZxoUXXmh897vfNXp6euwuLSk899xzA35HL1++3DCMvunSd955p5GXl2dkZGQYV155pXHo0KG41+EyDJYdBAAAzsGYFwAA4CiEFwAA4CiEFwAA4CiEFwAA4CiEFwAA4CiEFwAA4CiEFwAA4CiEFwAA4CiEFwAA4CiEFwAA4CiEFwAA4Cj/HyGhlBxh2anFAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rSk9TgP78hyh"
      },
      "source": [
        "list_depth = [1, 2, 3, 4, 5, 7]\n",
        "\n",
        "dt_regs = {}\n",
        "for i in list_depth:\n",
        "    dt_regs[f'depth={i}'] = DecisionTreeRegressor(max_depth=i, random_state=10).fit(X, y)\n",
        "\n",
        "dt_regs['depth=inf'] = DecisionTreeRegressor(random_state=10).fit(X, y)\n",
        "dt_regs['reg'] = DecisionTreeRegressor(min_samples_leaf=3, random_state=10).fit(X, y)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.tree import plot_tree\n",
        "\n",
        "plt.figure(figsize=(20, 12))\n",
        "plot_tree(dt_regs['depth=3'], filled=True);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 751
        },
        "id": "XOZlLGjq96B5",
        "outputId": "69f8a310-a293-43d7-b00e-711b3ff926c9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x1200 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uVVunwqn8k56",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "186f0369-cebc-4533-81e0-1c7ba5be9efe"
      },
      "source": [
        "X_test = np.arange(0.0, 10.0, 0.01)[:, np.newaxis]\n",
        "\n",
        "pred_list = {}\n",
        "for key, cur_dt_reg in dt_regs.items():\n",
        "      pred_list[key] = cur_dt_reg.predict(X_test)\n",
        "      print(key, cur_dt_reg.score(X, y), cur_dt_reg.score(X_test, np.sin(X_test)))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "depth=1 0.2360747359785319 0.17890381336190453\n",
            "depth=2 0.5731990797028333 0.6495781350767871\n",
            "depth=3 0.824564021557204 0.749888719560271\n",
            "depth=4 0.8961986179198297 0.8126117446353597\n",
            "depth=5 0.9796090310634048 0.7744256471415543\n",
            "depth=7 0.9985544686602744 0.7876500439845783\n",
            "depth=inf 1.0 0.7876699830775417\n",
            "reg 0.8394381085376528 0.8265964845774035\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 923
        },
        "id": "LT26btRPyzST",
        "outputId": "97ea72de-1fec-4f89-ed2e-749e6943dcec"
      },
      "source": [
        "fig, axa = plt.subplots(4,2, figsize=(20,15))\n",
        "\n",
        "for i, (key , cur_pred) in enumerate(pred_list.items()):\n",
        "    ax = axa[i//2, i%2]\n",
        "    ax.scatter(X, y)\n",
        "    ax.plot(X_test, cur_pred, label=f\"{key}\", c='k', linewidth=2)\n",
        "    ax.grid()\n",
        "    ax.legend()\n",
        "\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x1500 with 8 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã**\n",
        "1. –î–µ—Ä–µ–≤–æ —Ä–µ—à–µ–Ω–∏–π –¥–ª—è –∑–∞–¥–∞—á–∏ —Ä–µ–≥—Ä–µ—Å–∏–∏ https://youtu.be/0mMeaC3gjNI\n",
        "2. –î–µ—Ä–µ–≤–æ —Ä–µ—à–µ–Ω–∏–π –¥–ª—è –∑–∞–¥–∞—á–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ https://youtu.be/j8L07nuns2Y\n",
        "3. –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Å—Ç–∞–Ω–æ–≤–∞ –¥–µ—Ä–µ–≤–∞ —Ä–µ—à–µ–Ω–∏–π https://youtu.be/aWEdaXAZ01M\n",
        "4. –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è, –¥–µ—Ä–µ–≤—å—è —Ä–µ—à–µ–Ω–∏–π https://habr.com/ru/company/ods/blog/322534/\n",
        "5. –≠–Ω—Ç—Ä–æ–ø–∏—è –∏ –¥–µ—Ä–µ–≤—å—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π https://habr.com/ru/post/171759/"
      ],
      "metadata": {
        "id": "27zVSEdQ2Al1"
      }
    }
  ]
}